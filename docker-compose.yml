services:
  backbone-service:
    container_name: backbone-service
    build:
      context: ./backend/backbone
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-backbone-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18081:8080"
  gameKJH-service:
    container_name: gameKJH-service
    build:
      context: ./backend/game-KJH
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gamekjh-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18082:8080"
  gameCJM-service:
    container_name: gameCJM-service
    build:
      context: ./backend/game-CJM
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gamecjm-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18083:8080"

  gameKYH-service:
    container_name: gameKYH-service
    build:
      context: ./backend/game-KYH
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gamekyh-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18084:8080"

  gameLSR-service:
    container_name: gameLSR-service
    build:
      context: ./backend/game-LSR
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gamelsr-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18085:8080"

  gameOJS-service:
    container_name: gameOJS-service
    build:
      context: ./backend/game-OJS
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gameojs-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18086:8080"

  gameYDG-service:
    container_name: gameYDG-service
    build:
      context: ./backend/game-YDG
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-gameydg-service:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "18087:8080"

  frontend-react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_CREDIT_WEBSOCKET_URL: ${NEXT_PUBLIC_CREDIT_WEBSOCKET_URL}

    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-frontend:${IMAGE_TAG:-latest}
    env_file:
      - .env
    profiles:
      - build-only
    ports:
      - "80:80"

  springcloud-gateway:
    container_name: springcloud-gateway
    build:
      context: ./infra/springcloud-gateway
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-springcloud-gateway:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - backbone-service
      - gameKJH-service
      - gameCJM-service
      - gameKYH-service
      - gameLSR-service
      - gameOJS-service
      - gameYDG-service

  frontend-nginx:
    container_name: nginx
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
      args:
        FRONTEND_IMAGE: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-frontend:${IMAGE_TAG:-latest}
        NGINX: local_nginx.conf
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-nginx:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/cert/localhost.pem:/etc/nginx/certs/localhost.pem
      - ./infra/nginx/cert/localhost-key.pem:/etc/nginx/certs/localhost-key.pem

  redis:
    container_name: redis
    build:
      context: ./infra/redis
      dockerfile: Dockerfile
    env_file:
      - .env
    image: ${DOCKERHUB_USERNAME:-recreatekang}/d-ice-redis:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "6379:6379"