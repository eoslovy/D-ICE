user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    client_max_body_size 10M;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;


    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name p.ssafy.io;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ${SERVER_DOMAIN};

        ssl_certificate     /etc/letsencrypt/live/${CERT_DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${CERT_DOMAIN}/privkey.pem;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        root /usr/share/nginx/${CERT_DOMAIN};
        index index.html;

        location / {
            try_files $uri /index.html;
        }
        location /ws/ {
            proxy_pass http://springcloud-gateway:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/ {
            proxy_pass http://springcloud-gateway:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /bucket/ {
                    proxy_pass http://minio-bucket:9000/;  # 중요: 슬래시 포함
                    proxy_set_header Host minio-bucket:9000;  # presigned URL과 Host 동일하게 맞춤
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto http;  # presigned URL이 http일 경우
        }
    }
    server {
            listen 443 ssl;
            server_name ${BUCKET_DOMAIN};
            
            ssl_certificate     /etc/letsencrypt/live/${CERT_DOMAIN}/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/${CERT_DOMAIN}/privkey.pem;

            ssl_protocols       TLSv1.2 TLSv1.3;
            ssl_ciphers         HIGH:!aNULL:!MD5;

        location /bucket/ {
            proxy_pass http://minio-bucket:9000/;  # 중요: 슬래시 포함
            proxy_set_header Host minio-bucket:9000;  # presigned URL과 Host 동일하게 맞춤
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto http;  # presigned URL이 http일 경우
        }
    }
    server_tokens     off;
}

