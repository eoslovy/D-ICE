workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      variables:
        HOST_SERVER: d-ice.co.kr
        SERVER_DOMAIN: d-ice.co.kr
        BUCKET_DOMAIN: bucket.d-ice.co.kr
        CERT_DOMAIN: d-ice.co.kr bucket.d-ice.co.kr
    - when: always
      variables:
        HOST_SERVER: test.d-ice.co.kr
        SERVER_DOMAIN: test.d-ice.co.kr
        BUCKET_DOMAIN: bucket.test.d-ice.co.kr
        CERT_DOMAIN: test.d-ice.co.kr bucket.test.d-ice.co.kr

.backend-default-build:
  stage: build
  tags:
    - $GITLAB_USER_EMAIL
  script:
    - echo "üî® Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è ÌÖåÏä§Ìä∏ Ï§ë..."
    - docker build -t ${DOCKERHUB_USERNAME:-default}/$REGISTRY_PATH-${SERVICE_NAME}:$CI_COMMIT_SHORT_SHA ${BUILD_CONTEXT}
    #- echo "‚úÖ ÎπåÎìú ÏôÑÎ£å: $IMAGE_NAME:$CI_COMMIT_SHORT_SHA

.backend-default-push:
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "web"' # ÏàòÎèô Ïã§ÌñâÎèÑ ÌóàÏö©ÌïòÎ†§Î©¥
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "web"' # ÏàòÎèô Ïã§ÌñâÎèÑ ÌóàÏö©ÌïòÎ†§Î©¥
      when: manual
    - when: never
  tags:
    - $GITLAB_USER_EMAIL
  stage: push
  script:
    - docker images
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    - docker push ${DOCKERHUB_USERNAME:-default}/$REGISTRY_PATH-${SERVICE_NAME}:$CI_COMMIT_SHORT_SHA

.backend-default-deploy:
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "web"' # ÏàòÎèô Ïã§ÌñâÎèÑ ÌóàÏö©ÌïòÎ†§Î©¥
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "web"' # ÏàòÎèô Ïã§ÌñâÎèÑ ÌóàÏö©ÌïòÎ†§Î©¥
      when: manual
    - when: never
  tags:
    - $GITLAB_USER_EMAIL
  stage: deploy
  before_script:
    - apk add --no-cache openssh gettext coreutils
    - |
      if [[ "$CI_COMMIT_BRANCH" == "master" ]]; then
      export HOST_KEY=$PROD_KEY
      else
      export HOST_KEY=$TEST_KEY
      fi
  script:
    # 1Ô∏è‚É£ SSH Key ÏÑ§Ï†ï
    #- apt-get update && apt-get install -y openssh-client basez
    - mkdir -p ~/.ssh
    - echo "$HOST_KEY" | base64 -d > bastion.pem
    - chmod 600 bastion.pem
    - echo "$ENV_FILE_CONTENT" > .env
      # 2Ô∏è‚É£ Î∞∞Ìè¨ ÏÑúÎ≤ÑÏóê Docker Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥ Ï†ÑÏÜ°
      #- ssh -T -o StrictHostKeyChecking=no -i bastion.pem ubuntu@$HOST_SERVER "echo \"$DOCKER_HUB_TOKEN\" | docker login --username \"$DOCKER_HUB_USERNAME\" --password-stdin"
    - cat docker-compose.deploy.yml
      # 3Ô∏è‚É£ ÌôòÍ≤ΩÎ≥ÄÏàòÍ∞Ä Î∞òÏòÅÎêú `docker-compose.yml`ÏùÑ Î∞∞Ìè¨ ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
    - envsubst < docker-compose.deploy.yml > docker-compose.processed.yml
    - cat docker-compose.processed.yml
    - scp -o StrictHostKeyChecking=no -i bastion.pem .env ubuntu@$HOST_SERVER:/home/ubuntu/.env

    - scp -o StrictHostKeyChecking=no -i bastion.pem docker-compose.processed.yml ubuntu@$HOST_SERVER:/home/ubuntu/docker-compose.yml

    - ssh -T -o StrictHostKeyChecking=no -i bastion.pem ubuntu@$HOST_SERVER "
      cd /home/ubuntu && docker-compose stop $SERVICE_NAME && docker-compose rm -f $SERVICE_NAME && IMAGE_TAG=$CI_COMMIT_SHORT_SHA docker-compose pull $SERVICE_NAME && IMAGE_TAG=$CI_COMMIT_SHORT_SHA docker-compose up -d --no-build --force-recreate $SERVICE_NAME
      "

    # 4Ô∏è‚É£ Î∞∞Ìè¨ ÏÑúÎ≤ÑÏóêÏÑú `docker-compose` Ïã§Ìñâ (Î°úÍ∑∏Ïù∏ Ïú†ÏßÄÎê®)
    #- ssh -T -o StrictHostKeyChecking=no -i bastion.pem ubuntu@$HOST_SERVER \
    #  "bash -l -c '
    #     DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME \
    #    IMAGE_TAG=$CI_COMMIT_SHORT_SHA \
    #    SERVICE_NAME=$SERVICE_NAME \
    #    docker-compose -f /home/ubuntu/docker-compose.yml pull \$SERVICE_NAME && \
    #    docker-compose -f /home/ubuntu/docker-compose.yml up -d \$SERVICE_NAME --remove-orphans
    #  '"
    - ssh -T -o StrictHostKeyChecking=no -i bastion.pem ubuntu@$HOST_SERVER "
      docker ps"